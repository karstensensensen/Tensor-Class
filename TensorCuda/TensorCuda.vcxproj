<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelException|x64">
      <Configuration>RelException</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <VCProjectVersion>16.0</VCProjectVersion>
    <Keyword>Win32Proj</Keyword>
    <ProjectGuid>{50A757D4-DDB7-479A-BFBA-E70AEC0F2696}</ProjectGuid>
    <RootNamespace>MultrixCuda</RootNamespace>
    <WindowsTargetPlatformVersion>10.0</WindowsTargetPlatformVersion>
    <ProjectName>TensorCuda</ProjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v142</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v142</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelException|x64'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v142</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
    <Import Project="$(VCTargetsPath)\BuildCustomizations\CUDA 11.0.props" />
  </ImportGroup>
  <ImportGroup Label="Shared">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='RelException|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <LinkIncremental>true</LinkIncremental>
    <ReferencePath>$(VC_ReferencesPath_x64);</ReferencePath>
    <OutDir>$(SolutionDir)lib\CUDA\</OutDir>
    <TargetName>$(ProjectName)_$(Platform)_$(Configuration)</TargetName>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <LinkIncremental>false</LinkIncremental>
    <ReferencePath>$(VC_ReferencesPath_x64);</ReferencePath>
    <OutDir>$(SolutionDir)lib\CUDA\</OutDir>
    <TargetName>$(ProjectName)_$(Platform)_$(Configuration)</TargetName>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelException|x64'">
    <LinkIncremental>false</LinkIncremental>
    <ReferencePath>$(VC_ReferencesPath_x64);</ReferencePath>
    <OutDir>$(SolutionDir)lib\CUDA\</OutDir>
    <TargetName>$(ProjectName)_$(Platform)_$(Configuration)</TargetName>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>TENSOR_PROFILING;_TS_DEBUG;_CUDA;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <AdditionalIncludeDirectories>C:\Dev\cpp\libs\Performance\include;..\include;..\CUDAinclude;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AdditionalOptions>/WL /showIncludes %(AdditionalOptions)</AdditionalOptions>
      <LanguageStandard>stdcpplatest</LanguageStandard>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalDependencies>Performance_x64_d.lib;cudart.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>C:\Dev\cpp\libs\Performance\libs;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
    </Link>
    <CudaCompile />
    <CudaLink />
    <CudaCompile />
    <CudaLink>
      <AdditionalLibraryDirectories>C:\Dev\cpp\libs\Performance\libs;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>/showIncludes %(AdditionalOptions)</AdditionalOptions>
    </CudaLink>
    <Xdcmake />
    <CudaCompile />
    <CudaCompile />
    <CudaCompile />
    <CudaCompile />
    <CudaCompile />
    <CudaCompile>
      <AdditionalOptions>-Xcompiler "/openmp" --std c++17 %(AdditionalOptions)</AdditionalOptions>
    </CudaCompile>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>TENSOR_PROFILING;_CUDA;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <AdditionalIncludeDirectories>C:\Dev\cpp\libs\Performance\include;..\include;..\CUDAinclude;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AdditionalOptions>/WL /showIncludes %(AdditionalOptions)</AdditionalOptions>
      <LanguageStandard>stdcpplatest</LanguageStandard>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalDependencies>Performance_x64.lib;cudart.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>C:\Dev\cpp\libs\Performance\libs;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
    </Link>
    <CudaCompile />
    <CudaLink />
    <CudaCompile />
    <CudaLink>
      <AdditionalLibraryDirectories>C:\Dev\cpp\libs\Performance\libs;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>/showIncludes %(AdditionalOptions)</AdditionalOptions>
    </CudaLink>
    <Xdcmake />
    <CudaCompile />
    <CudaCompile />
    <CudaCompile />
    <CudaCompile>
      <AdditionalOptions>-Xcompiler "/openmp" --std c++17 %(AdditionalOptions)</AdditionalOptions>
    </CudaCompile>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelException|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>TENSOR_PROFILING;_CUDA;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <AdditionalIncludeDirectories>C:\Dev\cpp\libs\Performance\include;..\include;..\CUDAinclude;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AdditionalOptions>/WL /showIncludes %(AdditionalOptions)</AdditionalOptions>
      <LanguageStandard>stdcpplatest</LanguageStandard>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalDependencies>Performance_x64.lib;cudart.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>C:\Dev\cpp\libs\Performance\libs;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
    </Link>
    <CudaCompile />
    <CudaLink />
    <CudaCompile />
    <CudaLink>
      <AdditionalLibraryDirectories>C:\Dev\cpp\libs\Performance\libs;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>/showIncludes %(AdditionalOptions)</AdditionalOptions>
    </CudaLink>
    <Xdcmake />
    <CudaCompile />
    <CudaCompile />
    <CudaCompile />
    <CudaCompile>
      <AdditionalOptions>-Xcompiler "/openmp" --std c++17 %(AdditionalOptions)</AdditionalOptions>
    </CudaCompile>
  </ItemDefinitionGroup>
  <ItemGroup>
    <None Include="boost_x64_debug.props" />
    <None Include="boost_x64_release.props" />
    <None Include="boost_x86_debug.props" />
    <None Include="boost_x86_release.props" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="..\CUDAInclude\TensorCuda.cuh" />
    <ClInclude Include="..\CUDAInclude\TensorCudaBones.cuh" />
    <ClInclude Include="..\CUDAInclude\TensorOperatorKernels.cuh" />
    <ClInclude Include="..\include\Tensor.h" />
    <ClInclude Include="..\include\TensorArithmetic.h" />
    <ClInclude Include="..\include\TensorArithmeticOperators.h" />
    <ClInclude Include="..\include\TensorBones.h" />
    <ClInclude Include="..\include\TensorCompareOperators.h" />
    <ClInclude Include="..\include\TensorEnums.h" />
    <ClInclude Include="..\include\TensorExceptions.h" />
    <ClInclude Include="..\include\TensorSlice.h" />
    <ClInclude Include="..\include\TensorSliceBones.h" />
    <ClInclude Include="..\include\TensorTools.h" />
    <ClInclude Include="..\include\TensorToolsBones.h" />
    <ClInclude Include="..\include\TSliceWrapper.h" />
    <ClInclude Include="..\Multrix\PerlinKernel.cuh" />
    <ClInclude Include="..\Multrix\PerlinNoise.h" />
  </ItemGroup>
  <ItemGroup>
    <CudaCompile Include="..\src\TSliceWrapper.cpp" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="..\src\empty.cpp" />
    <CudaCompile Include="..\src\TensorCuda.cu" />
    <CudaCompile Include="..\src\main.cpp" />
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
    <Import Project="$(VCTargetsPath)\BuildCustomizations\CUDA 11.0.targets" />
  </ImportGroup>
</Project>